name: Deploy to GCP Private VM

on:
  push:
    branches: [ dsd ]

env:
  PROJECT_ID: true-alliance-464905-t8
  REGION: asia-northeast3
  IMAGE_NAME: cafeboo-ai

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_2 }}'

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          version: latest

      - name: Configure Docker to use Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev

      - name: Set up QEMU Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build & Push Docker Image with Registry Cache
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ai/${{ env.IMAGE_NAME }}:${{ github.sha }}
          cache-from: type=registry,ref=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ai/${{ env.IMAGE_NAME }}:buildcache
          cache-to:   type=registry,ref=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ai/${{ env.IMAGE_NAME }}:buildcache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY_2 }}'

      - name: SSH into GCP VM via IAP and Deploy
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          UPSTAGE_API_KEY: ${{ secrets.UPSTAGE_API_KEY }}
        run: |
          gcloud compute ssh dev-vm \
            --project=${{ env.PROJECT_ID }} \
            --zone=${{ env.REGION }}-a \
            --tunnel-through-iap \
            --command="\
              sudo docker stop ${{ env.IMAGE_NAME }} || true && \
              sudo docker rm ${{ env.IMAGE_NAME }} || true && \
              sudo docker pull ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ai/${{ env.IMAGE_NAME }}:${{ github.sha }} && \
              sudo docker image prune -f && \
              sudo docker run -d --name ${{ env.IMAGE_NAME }} --network host \
                --restart=always \
                -e GOOGLE_API_KEY='${GOOGLE_API_KEY}' \
                -e UPSTAGE_API_KEY='${UPSTAGE_API_KEY}' \
                ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/ai/${{ env.IMAGE_NAME }}:${{ github.sha }}"